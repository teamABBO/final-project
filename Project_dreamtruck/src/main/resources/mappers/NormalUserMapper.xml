<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.kosta.abbo.mapper.NormalUserMapper">
	
	<!-- 로그인 -->
	<select id="login" resultType="NormalUser">
		SELECT user_id as userId,
      				id,
       			    pw,
       			  type,
       			  name,
       			  phone,
       			  email
		  FROM   users
		  WHERE  id = #{id} 
      	    AND  pw = #{pw}
	</select>
	
	<!-- 아이디  중복 -->
	<select id="isMember" resultType="String">
	SELECT id
	FROM   users
	WHERE  id = #{id}
	</select>
	
	<!-- 회원가입 -->
	<insert id="create">
	INSERT INTO users
            (user_id,
                  id,
                name,
                type,
                  pw,
               phone,
             regdate,
               email,
             like_area)
	VALUES  (user_id_seq.nextval,
            			   #{id},
          			     #{name},
           			    'normal',
            			   #{pw},
            		    #{phone},
           				 sysdate,
           				#{email},
            		 #{likeArea})
	</insert> 
	
	<!-- 회원탈퇴 -->
   <delete id="delete" >
      DELETE FROM users
      WHERE  id = #{id}
          AND pw = #{pw}
   </delete>
	
	<!-- 아이디 찾기 -->
	<select id="idCheck" resultType="String">
	SELECT id
	FROM   users
	WHERE  NAME = #{name}
    AND phone = #{phone}
	
	</select>
	
	<!-- 비밀번호 찾기 찾기 -->
	<select id="pwCheck" resultType="String">
	SELECT pw
	FROM   users
	WHERE  ID = #{id}
    AND email = #{email}
	
	</select>
	
	<!-- 정보수정 -->
	<update id="update">
	UPDATE  users 
	SET        pw = #{pw},
            phone = #{phone},
            email = #{email},
        like_area = #{likeArea}
	WHERE  user_id = #{userId}
	</update>
	
	<!-- 일반상세보기 -->
	<select id="read" resultType="NormalUser">
		select user_id as userId,
							  id,
							name,
							type,
						   email,
						   phone,
		   like_area as likeArea
    	from users
    	where user_id = #{userId}
	</select>
	
	
	<!-- 파일 등록 여부 체크 후 수정-->
	<update id="checkDocu">
	<![CDATA[
   	  UPDATE users
      SET truck_doc = 'o'
      WHERE (SELECT count(*)
             FROM (SELECT docu_id
                   FROM docu
                   WHERE user_id = #{userId} AND expdate > sysdate
                   )
           ) >= 4
    ]]>
	</update>
	
	<!-- 파일 등록 여부 반환 -->
	<select id="isUpload" resultType="string">
		SELECT truck_doc truckDoc
		FROM users
		WHERE user_id = #{userId}
	</select>
	

</mapper>