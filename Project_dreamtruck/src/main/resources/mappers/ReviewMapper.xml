<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.kosta.abbo.mapper.ReviewMapper">
	
	<!-- 댓글 등록 -->
	<insert id="create">
		insert into review (review_id, regdate, content, star, writer_id, target_id)
		values(review_id_seq.nextval, sysdate, #{content},#{star}, #{writerId},#{targetId})
	</insert>
	
	<!-- 댓글 목록 -->
	<select id="list" resultType="Review">
		
		select r.review_id, r.regdate, r.content, r.star, r.writer_id, r.target_id, u.id as writername
		from review r join users u on r.writer_id = u.user_id
		where target_id =#{targetId} order by regdate desc;
		
	</select>
	
	<!-- 댓글 수정 -->
	<update id="update">
		update review set content = #{content}, star=#{star}, regdate=sysdate where review_id = #{reviewId}
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="delete">
			delete from review where review_id = #{reviewId}
	</delete>
	
	<!-- 댓글 목록 페이징 -->
	<select id="listPage" resultType="Review">
	SELECT reviewId, regdate, content, star, writerId, targetId, writerName
        FROM  (SELECT ROW_NUMBER() OVER (ORDER BY r.regdate DESC) page, 
                r.review_id as reviewId, r.regdate as regdate, r.content as content, r.star as star, r.writer_id as writerId, r.target_id as targetId, u.id as writerName
               from review r join users u on r.writer_id = u.user_id
               WHERE  review_id > 0 AND target_id = #{targetId}
               ORDER  BY review_id DESC, 
                             regdate DESC) 
         WHERE  page BETWEEN #{cri.pageStart} AND #{cri.pageStart} + #{cri.perPageNum}
	
	</select>
	
	<select id="count" resultType="int">
		select count(target_id) from review where target_id = #{targetId}
	</select>
</mapper>